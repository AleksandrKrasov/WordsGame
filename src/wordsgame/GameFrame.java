/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wordsgame;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author Саня
 */
public class GameFrame extends javax.swing.JFrame {
    
    private Player player;
    private Player player2;
    private NPC npc;
    
    private String npcWord;
    private int step;
    private int enemyTipe;
    private ArrayList<String> pUsedOnly;
    private ArrayList<String> eUsedOnly;
    private String name1;
    private String name2;
    /**
     * Creates new form NPCGameFrame
     * @param theme
     * @param enemyTipe
     */
    public GameFrame(int theme, int enemyTipe) {
        initComponents();
        try {
            player = new Player(theme);
            npc = new NPC(theme);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "The dictionary is absent");
        }
        npcWord = null;
        step = 0;
        this.enemyTipe = enemyTipe;
        
        pUsedOnly = new ArrayList<>();
        eUsedOnly = new ArrayList<>();
    }
    
    public GameFrame(int theme, int enemyTipe, String name1, String name2) {
        initComponents();
        try {
            player = new Player(theme);
            if(enemyTipe == 2)
                player2 = new Player(theme);
            npc = new NPC(theme);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "The dictionary is absent");
        }
        npcWord = null;
        step = 0;
        this.enemyTipe = enemyTipe;
        
        pUsedOnly = new ArrayList<>();
        eUsedOnly = new ArrayList<>();
        
        if(enemyTipe == 2){
            this.name1 = name1;
            this.name2 = name2;
            changePriorities();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(500, 200, 0, 0));

        jLabel1.setText("Write a word");

        jLabel2.setText("Computer`s word");
        jLabel2.setToolTipText("");

        jTextField2.setEditable(false);

        jButton1.setText("Go");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("I`m looser");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .addComponent(jTextField2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(enemyTipe == 1)
            PlayNPC();
        if(enemyTipe == 2){
            if(step % 2 == 0 || step == 0){
                Player1Step();
            }
            else{
                Player2Step();
            }  
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        createResultFrame();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void PlayNPC(){
        if(jTextField1.getText().endsWith("y")){
            JOptionPane.showMessageDialog(null, "My congratulations, you are winner");
            pUsedOnly.add(jTextField1.getText()); 
            step ++;
            createResultFrame();
        }else{
        if(player.isWordFound(jTextField1.getText())){
            if(step > 0){ 
                if(!jTextField1.getText().startsWith(player.getLastLetter(npcWord))){
                    JOptionPane.showMessageDialog(null, "The word starts from wrong word");
                }else{
                    if(!player.checkIfUsed(jTextField1.getText())){
                        do{
                            npcWord = npc.generateWordByLastLetter(jTextField1.getText());
                            if(!npc.checkIfUsed(npcWord)){
                                jTextField2.setText(npcWord);
                                player.addUsedWord(npcWord);
                                npc.addUsedWord(jTextField1.getText());
                                pUsedOnly.add(jTextField1.getText());
                                eUsedOnly.add(npcWord);
                            }
                        }while(!npc.checkIfUsed(npcWord));
                        jTextField1.setText("");
                        step ++;
                    }
                    else
                        JOptionPane.showMessageDialog(null, "This word has been already mentioned");
                }   
            }
            else{
                if(!player.checkIfUsed(jTextField1.getText())){
                    do{
                        npcWord = npc.generateWordByLastLetter(jTextField1.getText());
                        if(!npc.checkIfUsed(npcWord)){
                            jTextField2.setText(npcWord);
                            jTextField2.setText(npcWord);
                            player.addUsedWord(npcWord);
                            npc.addUsedWord(jTextField1.getText());
                            pUsedOnly.add(jTextField1.getText());
                            eUsedOnly.add(npcWord);
                        }
                    }while(!npc.checkIfUsed(npcWord));
                    jTextField1.setText("");
                    step ++;
                }
                else
                    JOptionPane.showMessageDialog(null, "This word has been already mentioned");
            }
                
        }else
            JOptionPane.showMessageDialog(null, "This word is absent in the dictionary");
    }}
    
    private void Player1Step(){
        if(player.isWordFound(jTextField1.getText())){
            if(step > 0){ 
                if(!jTextField1.getText().startsWith(player.getLastLetter(jTextField2.getText()))){
                    JOptionPane.showMessageDialog(null, "The word starts from wrong word");
                }else{
                    if(!player.checkIfUsed(jTextField1.getText())){
                        step ++;
                        player.addUsedWord(jTextField1.getText());
                        player2.addUsedWord(jTextField1.getText());
                        pUsedOnly.add(jTextField1.getText());
                        jTextField1.setEditable(false);
                        jTextField2.setEditable(true);
                        jTextField2.setText("");
                    }else{
                        JOptionPane.showMessageDialog(null, "This word has been already mentioned");}
                }
            }else{
                if(!player.checkIfUsed(jTextField1.getText())){
                    step ++;
                    player.addUsedWord(jTextField1.getText());
                    player2.addUsedWord(jTextField1.getText());
                    pUsedOnly.add(jTextField1.getText());
                    jTextField1.setEditable(false);
                    jTextField2.setEditable(true);
                    jTextField2.setText("");
                }
                else{
                    JOptionPane.showMessageDialog(null, "This word has been already mentioned");}}
        }else{JOptionPane.showMessageDialog(null, "This word is absent in the dictionary");}
    }
    
    private void Player2Step(){
        if(player2.isWordFound(jTextField2.getText())){
            if(!jTextField2.getText().startsWith(player2.getLastLetter(jTextField1.getText()))){
                JOptionPane.showMessageDialog(null, "The word starts from wrong word");
            }else{
                if(!player2.checkIfUsed(jTextField2.getText())){
                    step ++;
                    player.addUsedWord(jTextField2.getText());
                    player2.addUsedWord(jTextField2.getText());
                    eUsedOnly.add(jTextField2.getText());
                    jTextField1.setEditable(true);
                    jTextField2.setEditable(false);
                    jTextField1.setText("");
                }
                else{
                    JOptionPane.showMessageDialog(null, "This word has been already mentioned");
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "This word is absent in the dictionary");
        }
    }
    
    
    private void createResultFrame() {
        if(enemyTipe == 1){
            showImage();
        }
        if(enemyTipe == 2){
            if(step % 2 == 0 || step == 0){
                JOptionPane.showMessageDialog(null, "Winner is " + name2);
            }
            else{
                JOptionPane.showMessageDialog(null, "Winner is" + name1);
            }  
            setVisible(false);
            ResultJFrame result = new ResultJFrame(pUsedOnly, eUsedOnly, step, name1, name2);
        
            result.setBounds(500, 200, 520, 250);
            result.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
            result.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent event) {
                result.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
                WordGameStart.mainMenue.setVisible(true);
            }});
            result.setVisible(true);
            result.setTitle("Result");
        }
    }
    
    private void changePriorities() { 
        jLabel1.setText(name1 + ", write a word:");
        jLabel2.setText(name2 + ", write a word:");  
    }
    
    private void showImage(){
        if(jTextField1.getText().endsWith("y")){
            setVisible(false);
            ResultJFrame result = new ResultJFrame(pUsedOnly, eUsedOnly, step);
            result.setBounds(500, 200, 520, 250);
            result.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
            result.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent event) {
            result.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
                WordGameStart.mainMenue.setVisible(true);
                }});
            result.setVisible(true);
            result.setTitle("Result");
        }else{
            setVisible(false);
            ImageFrame image = new ImageFrame(pUsedOnly, eUsedOnly, step);
        
            image.setBounds(500, 200, 415, 440);
            image.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
            image.setVisible(true);
            image.setTitle("Looser");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

}
